{"version":3,"file":"static/js/812.32feee7c.chunk.js","mappings":"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","sources":["api.js","components/MovieData/MovieList.styled.jsx","components/MovieData/MoviesList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7857d3be668b30082be7813451c66108';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `3/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `3/search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const movieDetails = async ({ id }) => {\n  const response = await axios.get(\n    `3/movie/${id}?language=en-US&append_to_response=images,credits&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getCast = async ({ id }) => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?language=en-US&append_to_response=images,credits&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviews = async ({ id }) => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?language=en-US&append_to_response=images,credits&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getPoster = url =>\n  url\n    ? `https://image.tmdb.org/t/p/w300${url}`\n    : 'https://placehold.it/300x450?text=Image_not_found';\n\nexport const movieResponseDataNormalize = response => {\n  const responseData = {\n    imageUrl: getPoster(response.poster_path),\n    title: response.title,\n    release_date: response.release_date.slice(0, 4),\n    overview:\n      response.overview !== '' ? response.overview : 'There is no overview',\n    genres:\n      response.genres.length > 0\n        ? response.genres?.map(genre => genre.name).join(', ')\n        : 'No genres found',\n    vote_average: response.vote_average,\n  };\n\n  return responseData;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListTitle = styled.h2`\ncolor: #6495ED;\nfont-size: 18px;\n`\n\nexport const MovieListElement = styled.ul`\nlist-style: none;\ndisplay: flex;\ngap: 20px 15px;\nflex-wrap: wrap;\njustify-content: center;\npadding: 0px;`\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieListItem = styled.li`\n  margin: 10px;\n`;\n\nexport const MoviePoster = styled.img`\nwidth: 100%;\n  height: auto;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n`\n\nexport const MovieCard = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 200px;\n  text-align: center; \n  margin: 0 auto;\n`","import React, { useLocation } from 'react-router-dom';\nimport {MovieCard, MovieListTitle, MovieListElement, MovieLink, MovieListItem, MoviePoster} from './MovieList.styled';\nimport {getPoster} from 'api';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <MovieListElement>\n      {movies.map((movie) => (\n        <MovieListItem key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n          <MovieCard>\n              <MoviePoster\n                src={getPoster(movie.poster_path)}\n                alt={movie.title}\n                height=\"300\"\n          />\n            <MovieListTitle>{movie.title}</MovieListTitle>\n            </MovieCard>\n            </MovieLink>\n        </MovieListItem>\n      ))}\n    </MovieListElement>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const TrendingTitle = styled.h1`\npadding-left: 50px;\ncolor: #0076CE;`","import { fetchTrendingMovies } from 'api';\nimport { useState, useEffect } from 'react';\nimport { Loader } from '../../components/Loader/Loader';\nimport MoviesList from '../../components/MovieData/MoviesList';\nimport { TrendingTitle } from './HomePage.styled';\n\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const response = await fetchTrendingMovies();\n        const newMovies = response.data.results;\n\n        if (newMovies.length === 0) {\n          console.error('No movies found');\n        } else {\n          setMovies([...newMovies]);\n        }\n      } catch (error) {\n        console.error('Something went wrong!...');\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {isError && <div>Error fetching movies. Please try again.</div>}\n      {movies.length > 0 && <TrendingTitle>Trending Movies ðŸ¤©</TrendingTitle>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {isLoading && <Loader />}\n    </div>\n  );\n}\n"],"names":["API_KEY","axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","data","results","_x","movieDetails","_ref4","_callee3","_ref3","id","_context3","_x2","getCast","_ref6","_callee4","_ref5","_context4","_x3","getReviews","_ref8","_callee5","_ref7","_context5","_x4","getPoster","url","movieResponseDataNormalize","_response$genres","imageUrl","poster_path","title","release_date","slice","overview","genres","length","map","genre","name","join","vote_average","MovieListTitle","styled","_templateObject","_taggedTemplateLiteral","MovieListElement","_templateObject2","MovieLink","Link","_templateObject3","MovieListItem","_templateObject4","MoviePoster","_templateObject5","MovieCard","_templateObject6","MoviesList","movies","location","useLocation","_jsx","children","movie","to","state","from","_jsxs","src","alt","height","TrendingTitle","HomePage","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","isError","setError","useEffect","fetchData","newMovies","console","error","_toConsumableArray","t0","finish","Loader"],"sourceRoot":""}